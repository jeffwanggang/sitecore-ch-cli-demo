<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.CH.Cli.Plugin.Serialization</name>
    </assembly>
    <members>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1">
            <summary>
            Base command handler for serialization commands.
            </summary>
            <typeparam name="TResource">The resource type.</typeparam>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{`0},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{`0},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.DefinitionsCache">
            <summary>
            Gets the entity definition cache.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.DefaultCulture">
            <summary>
            Gets or sets the default culture.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.ResourcesRegistry">
            <summary>
            Gets the resources registry.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.FolderName">
            <summary>
            Gets the name of the folder within the working directory based on the resource type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.FileType">
            <summary>
            Gets the file type based on the resource type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.Serializer">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.DiffService">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.FileProvider">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.DirectoryProvider">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.ResourceRegistryService">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.ResourceService">
            <summary>
            Gets the <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.WildCardToRegularExpression(System.String,System.String)">
            <summary>
            Coverts a wildcard expression to a regular expression.
            </summary>
            <param name="value">The wildcard.</param>
            <param name="fileType">The type of the file.</param>
            <returns>The <see cref="T:System.Text.RegularExpressions.Regex"/>.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.GetResourceNameAsync(`0)">
            <summary>
            Gets the name of a resource.
            </summary>
            <param name="resource">The <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/>.</param>
            <returns>The name of the resource.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.GetResourceAsync(System.String)">
            <summary>
            Gets a <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/> from the connected Content Hub instance.
            </summary>
            <param name="identifier">The identifier.</param>
            <returns>The <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/>.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.GetMatchingPaths(System.String,System.String)">
            <summary>
            Get resource paths that match the specified entity definition and/or name.
            </summary>
            <param name="name">The entity name.</param>
            <param name="definition">The entity definition name.</param>
            <returns>The collection of matching paths.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.InitAsync(System.IO.DirectoryInfo)">
            <summary>
            Initializes the handler.
            </summary>
            <param name="dirInfo">The directory info.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.FetchResourcesAsync(Stylelabs.M.Sdk.Contracts.Base.IIterator,System.Nullable{System.Int32})">
            <summary>
            Fetch resources using the specified iterator.
            </summary>
            <param name="iterator">The <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IIterator"/>.</param>
            <param name="modifiedMinutes">If filtering <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/> by ModifiedOn date, how many minutes.</param>
            <returns>A collection of <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/>.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.PersistResourcesToWorkingDirectoryAsync(System.Collections.Generic.IList{`0},System.Threading.CancellationToken)">
            <summary>
            Persists serialized resources to the working directory.
            </summary>
            <param name="resources">The resources.</param>
            <param name="token">The cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.PersistResourcesToRemoteAsync(System.String[])">
            <summary>
            Persists serialized resources to the connected Content Hub instance.
            </summary>
            <param name="paths">The paths for the resource files to persist.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.RemoveMissing(System.Collections.Generic.IList{`0})">
            <summary>
            Removes from the working directory resources that does not exists in the connected Content Hub instance.
            </summary>
            <param name="resources">The resources.</param>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.GetResourcePathAsync(`0,System.String)">
            <summary>
            Gets the path of the resource in the specified working directory.
            </summary>
            <param name="resource">The <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/>.</param>
            <param name="name">The resource name.</param>
            <returns>The path of the resource.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.AddResourceToCache(System.String,System.String)">
            <summary>
            Adds a resource to the cache.
            </summary>
            <param name="path">The resource file path.</param>
            <param name="sourceYaml">The resource source Yaml.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.ResolveNameAndPath(`0)">
            <summary>
            Resolves a resource's name and path.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The resource's name and path.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.CompareResourcesWithRemoteAsync(System.String[])">
            <summary>
            Compares the local resources with the remote state.
            </summary>
            <param name="paths">The resource paths.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationCommandHandler`1.ResolveEntityNameFromDisplayTemplate(Stylelabs.M.Sdk.Contracts.Base.IEntity)">
            <summary>
            Returns the entity name based on the configured display template.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The entity name, derived from the display template.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler">
            <summary>
            Base command handler for entity serialization commands.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.FolderName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.FileType">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.GetResourceNameAsync(Stylelabs.M.Sdk.Contracts.Base.IEntity)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.GetResourceAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityCommandHandler.GetMatchingPaths(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler">
            <summary>
            Base command handler for entity definition serialization commands.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.FolderName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.FileType">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.GetResourceNameAsync(Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.GetResourceAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationEntityDefinitionCommandHandler.GetMatchingPaths(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler">
            <summary>
            Base command handler for option list serialization commands.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.FolderName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.FileType">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.GetResourceNameAsync(Stylelabs.M.Sdk.Contracts.Base.IDataSource)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.GetResourceAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.GetMatchingPaths(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationOptionListCommandHandler.FetchResourcesAsync(Stylelabs.M.Sdk.Contracts.Base.IIterator,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler">
            <summary>
            Base command handler for entity serialization commands.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.FolderName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.FileType">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.GetResourceNameAsync(Stylelabs.M.Sdk.Contracts.Policies.IPolicy)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.GetResourceAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.GetMatchingPaths(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.FetchResourcesAsync(Stylelabs.M.Sdk.Contracts.Base.IIterator,System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.ToPolicy(Stylelabs.M.Sdk.Contracts.Base.IEntity)">
            <summary>
            Converts the given entity to a policy.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The policy.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BaseSerializationPolicyCommandHandler.ToPolicies(System.Collections.Generic.IEnumerable{Stylelabs.M.Sdk.Contracts.Base.IEntity})">
            <summary>
            Converts the given entities to policies.
            </summary>
            <param name="entities">The entities.</param>
            <returns>The policies.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BuildRegistryCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.BuildRegistryCommand"/>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BuildRegistryCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BuildRegistryCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BuildRegistryCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.BuildRegistryCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>DiffEntityCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.DiffEntityParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityDefinitionCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>DiffEntityDefinitionCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityDefinitionCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.DiffParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityDefinitionCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityDefinitionCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffEntityDefinitionCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffOptionListCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>DiffOptionListCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffOptionListCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.DiffParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffOptionListCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffOptionListCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffOptionListCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffPolicyCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>DiffPolicyCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffPolicyCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.DiffParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffPolicyCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffPolicyCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.DiffPolicyCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.InitializeCommandHandler">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.InitializeCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.InitializeCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializerService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.InitializeCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.InitializeCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageCreateCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>CreatePackageCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageCreateCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PackageCreateParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageCreateCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="packageService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageCreateCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageCreateCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageInstallCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>InstallPackageCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageInstallCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PackageInstallParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageInstallCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="packageService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageInstallCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PackageInstallCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PullEntityCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PullEntityParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityDefinitionCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PullEntityDefinitionCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityDefinitionCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityDefinitionCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityDefinitionCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullEntityDefinitionCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullOptionListCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PullOptionListCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullOptionListCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullOptionListCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullOptionListCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullOptionListCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullPolicyCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PullEntityCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullPolicyCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PullPolicyParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullPolicyCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullPolicyCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PullPolicyCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PushEntityCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PushEntityParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="serializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityDefinitionCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PushEntityDefinitionCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityDefinitionCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PushParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityDefinitionCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityDefinitionCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushEntityDefinitionCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushOptionListCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PushOptionListCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushOptionListCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PushParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushOptionListCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushOptionListCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushOptionListCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushPolicyCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>PushPolicyCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushPolicyCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.PushParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushPolicyCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushPolicyCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.PushPolicyCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>ValidateEntityCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntity},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityDefinitionCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>ValidateEntityDefinitionCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityDefinitionCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IEntityDefinition},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityDefinitionCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityDefinitionCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateEntityDefinitionCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateOptionListCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>ValidateOptionListCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateOptionListCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Base.IDataSource},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateOptionListCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateOptionListCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidateOptionListCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidatePolicyCommandHandler">
            <summary>
            The <see cref="T:System.CommandLine.Invocation.ICommandHandler"/> to process <see>
                <cref>ValidatePolicyCommand</cref>
            </see>.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidatePolicyCommandHandler.#ctor(System.Lazy{Stylelabs.M.Sdk.WebClient.IWebMClient},Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer,Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService{Stylelabs.M.Sdk.Contracts.Policies.IPolicy},Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider,Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider,Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService,Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService,Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService,Microsoft.Extensions.Options.IOptions{Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidatePolicyCommandHandler"/> class.
            </summary>
            <param name="client">The <see cref="T:Stylelabs.M.Sdk.WebClient.IWebMClient"/> instance.</param>
            <param name="renderer">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Rendering.IOutputRenderer"/> instance.</param>
            <param name="yamlSerializer">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1"/> instance.</param>
            <param name="diffService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1"/> instance.</param>
            <param name="fileProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IFileProvider"/> instance.</param>
            <param name="directoryProvider">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.IO.IDirectoryProvider"/> instance.</param>
            <param name="validationService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService"/> instance.</param>
            <param name="resourceRegistryService">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService"/> instance.</param>
            <param name="resourceService">The <see cref="T:Sitecore.CH.Cli.Core.Abstractions.Services.IResourceService"/> instance.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidatePolicyCommandHandler.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.CommandHandlers.ValidatePolicyCommandHandler.InvokeAsync(System.CommandLine.Invocation.InvocationContext)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.BuildRegistryCommand">
             <summary>
             Rebuilds the serialization registries for all resource types.
             </summary>
             <example>
                 Rebuild the local registries:
                 <code>ch-cli serialization build-registry</code>
                 Rebuild the local registries, using the specified working directory:
                 <code>ch-cli serialization build-registry --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.BuildRegistryCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.BuildRegistryCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffCommand">
            <summary>
            Defines the diff command.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityCommand">
             <summary>
             Shows differences between one or more serialized entities and their counterpart in the connected Content Hub instance.
             </summary>
             <example>
                 Show differences for entities of a specific entity definition:
                 <code>ch-cli serialization diff entity --definition "&lt;entity definition name&gt;"</code>
                 Show differences for entities of a specific entity definition, using the specified working directory:
                 <code>ch-cli serialization diff entity --definition "&lt;entity definition name&gt;" --folder "&lt;local path&gt;"</code>
                 Show differences for a specific entity, filtered by name:
                 <code>ch-cli serialization diff entity --definition "&lt;entity definition name&gt;" --name "&lt;entity name&gt;"</code>
                 Show differences for all entities:
                 <code>ch-cli serialization diff entity</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name(s) of entity(ies). Wildcard allowed.</description>
                     </item>
                     <item>
                         <term><c>--definition -d</c></term>
                         <description> Name of entity definition.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityDefinitionCommand">
             <summary>
             Shows differences between one or more serialized entity definitions and their counterpart in the connected Content Hub instance.
             </summary>
             <example>
                 Show differences for all entity definitions:
                 <code>ch-cli serialization diff entity-definition</code>
                 Show differences for all entity definitions that match the specific name, using the specified working directory:
                 <code>ch-cli serialization diff entity-definition --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the entity definition. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityDefinitionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffEntityDefinitionCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffOptionListCommand">
             <summary>
             Shows differences between one or more serialized option lists and their counterpart in the connected Content Hub instance.
             </summary>
             <example>
                 Show differences for all option lists:
                 <code>ch-cli serialization diff option-list</code>
                 Show differences for all option lists that match the specific name, using the specified working directory:
                 <code>ch-cli serialization diff option-list--name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the option list. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffOptionListCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffOptionListCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffPolicyCommand">
             <summary>
             Shows differences between one or more serialized policies and their counterpart in the connected Content Hub instance.
             </summary>
             <example>
                 Show differences for all policies:
                 <code>ch-cli serialization diff policy</code>
                 Show differences for all policies that match the specific name, using the specified working directory:
                 <code>ch-cli serialization diff policy --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the option list. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffPolicyCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.DiffPolicyCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.InitializeCommand">
             <summary>
             Initializes a folder with the files needed to serialize Content Hub entities.
             </summary>
             <example>
                 Initialize the current directory:
                 <code>ch-cli scripting initialize</code>
                 Initialize the specified directory:
                 <code>ch-cli scripting initialize --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.InitializeCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.InitializeCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCommand">
            <summary>
            Defines the package command.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCreateCommand">
             <summary>
             Creates a package from a serialization folder containing all resource types.
             </summary>
             <example>
                 Create a package with the specified name:
                 <code>ch-cli serialization package create --name "&lt;package name&gt;"</code>
                 Create a package with the specified name, using the specified working directory:
                 <code>ch-cli serialization package create --name "&lt;package name&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Required parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the package.</description>
                     </item>
                 </list>
            
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCreateCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageCreateCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageInstallCommand">
             <summary>
             Installs a previously created package archive.
             </summary>
             <example>
                 Install a package:
                 <code>ch-cli serialization package install --path "&lt;package path&gt;"</code>
                 Perform a dry-run with detailed logging, outlining will happen during the actual installation without making any changes:
                 <code>ch-cli serialization package install --path "&lt;package path&gt;" --what-if</code>
             </example>
             <remarks>
                 <strong>Required parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--path -p</c></term>
                         <description> Path to the package to install.</description>
                     </item>
                 </list>
            
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--what-if -w</c></term>
                         <description> Indicates whether to do a what-if install, where the log of changes is shown, but no changes are made.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageInstallCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PackageInstallCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullCommand">
            <summary>
            Defines the pull command.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityCommand">
             <summary>
             Serializes one or more entities from the connected Content Hub instance to the local file system.
             </summary>
             <example>
                 Serialize an entity by ID:
                 <code>ch-cli serialization pull entity --id "&lt;entity id&gt;"</code>
                 Serialize an entity by ID with its related entities:
                 <code>ch-cli serialization pull entity --id "&lt;entity id&gt;" --include-relations</code>
                 Serialize all entities, using the specified working directory:
                 <code>ch-cli serialization pull entity --folder "&lt;local path&gt;"</code>
                 Serialize all entities that match the specified entity definition, using the specified working directory:
                 <code>ch-cli serialization pull entity --definition "&lt;entity definition name&gt;" --folder "&lt;local path&gt;"</code>
                 Serialize all entities that match the specified name and entity definition, using the specified working directory:
                 <code>ch-cli serialization pull entity --name "&lt;name-starts*j&gt;" --definition "&lt;entity definition name&gt;" --folder "&lt;local path&gt;"</code>
                 Serialize all entities that match the specified entity definition and remove all entities that exist in the file system but not in the connected Content Hub instance:
                 <code>ch-cli serialization pull entity --definition "&lt;entity definition name&gt;" --remove-missing</code>
                 Serialize all entities that match the specified entity definitions and that were updated recently (see --minutes):
                 <code>ch-cli serialization pull entity --definition "&lt;entity definition name&gt;" --updates --minutes "&lt;15&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name(s) of entity(ies) to pull. Wildcard allowed.</description>
                     </item>
                     <item>
                         <term><c>--definition -d</c></term>
                         <description> Name of entity definition to pull entities for.</description>
                     </item>
                     <item>
                         <term><c>--id -i</c></term>
                         <description> Id of entity to pull.</description>
                     </item>
                     <item>
                         <term><c>--remove-missing -r</c></term>
                         <description> Remove local-only entities.</description>
                     </item>
                     <item>
                         <term><c>--include-relations -ir</c></term>
                         <description> Include related entities.</description>
                     </item>
                     <item>
                         <term><c>--updates -u</c></term>
                         <description>Update only entities modified in the last minutes (see --minutes).</description>
                     </item>
                     <item>
                         <term><c>--minutes -m</c></term>
                         <description> Minutes to go back to look for modified entities. Default is 30 minutes.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityDefinitionCommand">
             <summary>
             Serializes one or more entity definitions from the connected Content Hub instance to the local file system.
             </summary>
             <example>
                 Serialize an entity definition that matches the specified name:
                 <code>ch-cli serialization pull entity-definition -name "&lt;entity definition name&gt;"</code>
                 Serialize all entity definitions, using the specified working directory:
                 <code>ch-cli serialization pull entity-definition --folder "&lt;local path&gt;"</code>
                 Serialize all entity definitions that match the specific name to a specific folder:
                 <code>ch-cli serialization pull entity-definition --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
                 Serialize all entity definitions that match the specified name and remove all local entity definitions that exist in the file system but not in the connected Content Hub instance:
                 <code>ch-cli serialization pull entity-definition -name "&lt;entity definition name&gt;" --remove-missing</code>
                 Serialize all entity definitions that were updated recently (see --minutes):
                 <code>ch-cli serialization pull entity-definition --updates --minutes "&lt;15&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the entity definition to pull. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--remove-missing -r</c></term>
                         <description> Remove local-only entity definitions.</description>
                     </item>
                     <item>
                         <term><c>--updates -u</c></term>
                         <description>Update only entity definitions modified in the last minutes (see --minutes).</description>
                     </item>
                     <item>
                         <term><c>--minutes -m</c></term>
                         <description> Minutes to go back to look for modified entity definitions. Default is 30 minutes.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityDefinitionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullEntityDefinitionCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullOptionListCommand">
             <summary>
             Serializes one or more option lists from the connected Content Hub instance to the local file system.
             </summary>
             <example>
                 Serialize an option list that matches the specified name:
                 <code>ch-cli serialization pull option-list -name "&lt;option list name&gt;"</code>
                 Serialize all option lists, using the specified working directory:
                 <code>ch-cli serialization pull option-list --folder "&lt;local path&gt;"</code>
                 Serialize all option lists that match the specific name, using the specified working directory:
                 <code>ch-cli serialization pull option-list --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
                 Serialize all option lists that match the specified name and remove all local option lists that exist in the file system but not in the connected Content Hub instance:
                 <code>ch-cli serialization pull option-list -name "&lt;option list name&gt;" --remove-missing</code>
                 Serialize all option lists that were updated recently (see --minutes):
                 <code>ch-cli serialization pull option-list --updates --minutes "&lt;15&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the option list to pull. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--remove-missing -r</c></term>
                         <description> Remove local-only option lists.</description>
                     </item>
                     <item>
                         <term><c>--updates -u</c></term>
                         <description>Update only option lists modified in the last minutes (see --minutes).</description>
                     </item>
                     <item>
                         <term><c>--minutes -m</c></term>
                         <description> Minutes to go back to look for modified option lists. Default is 30 minutes.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullOptionListCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullOptionListCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullPolicyCommand">
             <summary>
             Serializes one or more policy from the connected Content Hub instance to the local file system.
             </summary>
             <example>
                 Serialize a policy by ID:
                 <code>ch-cli serialization pull policy --id "&lt;policy id&gt;"</code>
                 Serialize all policies, using the specified working directory:
                 <code>ch-cli serialization pull policy --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the policies to pull. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--id -i</c></term>
                         <description> Id of policy to pull.</description>
                     </item>
                     <item>
                         <term><c>--remove-missing -r</c></term>
                         <description> Remove local-only entities.</description>
                     </item>
                     <item>
                         <term><c>--updates -u</c></term>
                         <description>Update only entities modified in the last minutes (see --minutes).</description>
                     </item>
                     <item>
                         <term><c>--minutes -m</c></term>
                         <description> Minutes to go back to look for modified entities. Default is 30 minutes.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullPolicyCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PullPolicyCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushCommand">
            <summary>
            Defines the pull command.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityCommand">
             <summary>
             Deserializes one or more entities from the local file system to the connected Content Hub instance.
             </summary>
             <example>
                 Deserialize all entities:
                 <code>ch-cli serialization push entity</code>
                 Deserialize all entities that match the specified entity definition, using the specified working directory:
                 <code>ch-cli serialization push entity --definition "&lt;entity definition name&gt;" --folder "&lt;local path&gt;"</code>
                 Deserialize all entities that match the specified entity definition and name, using the specified working directory:
                 <code>ch-cli serialization entity --name "&lt;name-starts*j&gt;" --definition "&lt;entity definition name&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name(s) of entity(ies) to push. Wildcard allowed.</description>
                     </item>
                     <item>
                         <term><c>--definition -d</c></term>
                         <description> Name of entity definition to push entities for.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityDefinitionCommand">
             <summary>
             Deserializes one or more entity definitions from the local file system to the connected Content Hub instance.
             </summary>
             <example>
                 Deserialize all entity definitions:
                 <code>ch-cli serialization push entity-definition</code>
                 Deserialize all entity definitions that match the specified name, using the specified working directory:
                 <code>ch-cli serialization push entity-definition --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the entity definition to push. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityDefinitionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushEntityDefinitionCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushOptionListCommand">
             <summary>
             Deserializes one or more option lists from the local file system to the connected Content Hub instance.
             </summary>
             <example>
                 Deserialize all option lists:
                 <code>ch-cli serialization push option-list</code>
                 Deserialize all option lists that match the specified name, using the specified working directory:
                 <code>ch-cli serialization push option-list --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the option list to push. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushOptionListCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushOptionListCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushPolicyCommand">
             <summary>
             Deserializes one or more policies from the local file system to the connected Content Hub instance.
             </summary>
             <example>
                 Deserialize all option lists:
                 <code>ch-cli serialization push policy</code>
                 Deserialize all policies that match the specified name, using the specified working directory:
                 <code>ch-cli serialization push policy --name "&lt;name-starts*j&gt;" --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--name -n</c></term>
                         <description> Name of the policy to push. Wildcards allowed.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushPolicyCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.PushPolicyCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateCommand">
            <summary>
            Defines the validate command.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityCommand">
             <summary>
             Validates the known entities in the local file system.
             </summary>
             <example>
                 Validate entities, using the specified working directory:
                 <code>ch-cli serialization validate entity --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityDefinitionCommand">
             <summary>
             Validates the known entity definitions in the local file system.
             </summary>
             <example>
                 Validate entity definitions, using the specified working directory:
                 <code>ch-cli serialization validate entity-definition --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityDefinitionCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateEntityDefinitionCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateOptionListCommand">
             <summary>
             Validates the known option lists in the local file system.
             </summary>
             <example>
                 Validate option lists, using the specified working directory:
                 <code>ch-cli serialization validate option-list --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateOptionListCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidateOptionListCommand"/> class.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidatePolicyCommand">
             <summary>
             Validates the known policies in the local file system.
             </summary>
             <example>
                 Validate entities, using the specified working directory:
                 <code>ch-cli serialization validate policy --folder "&lt;local path&gt;"</code>
             </example>
             <remarks>
                 <strong>Optional parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>--endpoint -e</c></term>
                         <description> Specifies an alternative endpoint name for the execution of this command.</description>
                     </item>
                     <item>
                         <term><c>--folder -f</c></term>
                         <description> Specifies the a working directory other than the current folder.</description>
                     </item>
                 </list>
            
                 <strong>Global parameters</strong>
                 <list type="bullet">
                     <item>
                         <term><c>-? --help -h</c></term>
                         <description> Show this help message and exit.</description>
                     </item>
                     <item>
                         <term><c>-v --verbosity</c></term>
                         <description> Enables verbose logging.</description>
                     </item>
                 </list>
             </remarks>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidatePolicyCommand.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Commands.ValidatePolicyCommand"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoDictionaryTypeConverter.Accepts(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoDictionaryTypeConverter.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoDictionaryTypeConverter.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoTypeConverter.Accepts(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoTypeConverter.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlCultureInfoTypeConverter.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlPropertyDataTypeConverter.Accepts(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlPropertyDataTypeConverter.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlPropertyDataTypeConverter.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlStringDictionaryTypeConverter.Accepts(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlStringDictionaryTypeConverter.ReadYaml(YamlDotNet.Core.IParser,System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Converters.YamlStringDictionaryTypeConverter.WriteYaml(YamlDotNet.Core.IEmitter,System.Object,System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult">
            <summary>
            Defines a deserialize result.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult"/> class.
            </summary>
            <param name="path">The path.</param>
            <param name="fileName">The file name.</param>
            <param name="identifier">The identifier.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.Errors">
            <summary>
            Gets or sets the errors.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DeserializeResult.Yaml">
            <summary>
            Gets or sets the yaml.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.DiffEntityParameters">
            <summary>
            Defines the diff entity parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DiffEntityParameters.Definition">
            <summary>
            Gets or sets the entity definition.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.DiffParameters">
            <summary>
            Defines the diff parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.DiffParameters.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PackageCreateParameters">
            <summary>
            Defines the serialization package parameters.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PackageCreateParameters.Name">
            <summary>
            Gets or sets the name of the package.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PackageInstallParameters">
            <summary>
            Defines the serialization package parameters.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PackageInstallParameters.Path">
            <summary>
            Gets or sets the path of the package.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PackageInstallParameters.WhatIf">
            <summary>
            Gets or sets a value indicating whether to do a what-if install, where the log of changes is shown, but no changes are made.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PullEntityParameters">
            <summary>
            Defines the pull entity parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullEntityParameters.Identifier">
            <summary>
            Gets or sets the identifier or id of the entity.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullEntityParameters.Definition">
            <summary>
            Gets or sets the entity definition.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullEntityParameters.IncludeRelations">
            <summary>
            Gets or sets a value indicating whether related entities are pulled.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters">
            <summary>
            Defines the pull parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters.RemoveMissing">
            <summary>
            Gets or sets a value indicating whether to remove entity definitions that only exists on the local machine.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters.Update">
            <summary>
            Gets or sets a value indicating whether to update all entity definitions that were modified in the last <see cref="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters.Minutes"/>.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullParameters.Minutes">
            <summary>
            Gets or sets the minutes.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PullPolicyParameters">
            <summary>
            Defines the pull policy parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PullPolicyParameters.Identifier">
            <summary>
            Gets or sets the identifier or id of the policy.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PushEntityParameters">
            <summary>
            Defines the push entity parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PushEntityParameters.Definition">
            <summary>
            Gets or sets the entity definition.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.PushParameters">
            <summary>
            Defines the push parameters model.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.PushParameters.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters">
            <summary>
            Defines the shared serialization parameters.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationParameters.Folder">
            <summary>
            Gets or sets an alternative working directory.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource">
            <summary>
            Defines a serialized resource.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> class.
            </summary>
            <param name="identifier">The identifier.</param>
            <param name="path">The path of the file.</param>
            <param name="name">The name.</param>
            <param name="lastUpdated">The last updated date.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.Path">
            <summary>
            Gets or sets the path of the file.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource.LastUpdated">
            <summary>
            Gets or sets the last updated date.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry">
            <summary>
            Defines a registry for serialized resources.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.#ctor(System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry"/> class.
            </summary>
            <param name="path">The path of the file.</param>
            <param name="workingDirectory">The working directory.</param>
            <param name="lastUpdated">The last updated date.</param>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.Resources">
            <summary>
            Gets the resources.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.FullPath">
            <summary>
            Gets or sets the full path to the registry.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.WorkingDirectory">
            <summary>
            Gets or sets the working directory.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry.LastModified">
            <summary>
            Gets or sets the last modified date.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition">
            <summary>
            Defines the condition for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition.Member">
            <summary>
            Gets or sets the member name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Condition.DefinitionName">
            <summary>
            Gets or sets the definition name.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource">
            <summary>
            Defines the data source model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource.Type">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource.IsSystemOwned">
            <summary>
            Gets or sets a value indicating whether the data source is system-owned or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource.Values">
            <summary>
            Gets or sets the values.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource.Contains(System.String)">
            <summary>
            Checks if the data source contains the specified <paramref name="identifier"/>.
            </summary>
            <param name="identifier">The identifier of the value.</param>
            <returns>Whether or not the data source contains the value.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSourceValue">
            <summary>
            Defines the data source value for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSourceValue.Identifier">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSourceValue.Labels">
            <summary>
            Gets or sets the labels.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSourceValue.Values">
            <summary>
            Gets or sets the values.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity">
            <summary>
            Defines the entity model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.Definition">
            <summary>
            Gets or sets the definition name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.Identifier">
            <summary>
            Gets or sets the entity identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.InheritsSecurity">
            <summary>
            Gets or sets a value indicating whether the entity inherits security.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.Relations">
            <summary>
            Gets or sets the relations.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity.IsRelated(System.String,System.String)">
            <summary>
            Determines whether the specified entity is related to the current entity instance.
            </summary>
            <param name="identifier">The entity identifier.</param>
            <param name="relationName">The relation name.</param>
            <returns><c>>true</c> if the entities are related, otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition">
            <summary>
            Defines the entity definition model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition.IsSystemOwned">
            <summary>
            Gets or sets a value indicating whether the entity definition is system-owned or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition.MemberGroups">
            <summary>
            Gets or sets the member groups.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition.Properties">
            <summary>
            Gets the properties.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.EntityDefinition.Relations">
            <summary>
            Gets the relations.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition">
            <summary>
            Defines the member definition for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.PropertyDataType">
            <summary>
            Gets or sets the property data type if applicable.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.Role">
            <summary>
            Gets or sets the relation role if applicable.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.Cardinality">
            <summary>
            Gets or sets the relation cardinality if applicable.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.Conditions">
            <summary>
            Gets or sets the conditions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether the member definition allows updates or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.IsSystemOwned">
            <summary>
            Gets or sets a value indicating whether the member definition is system-owned or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.AssociatedLabels">
            <summary>
            Gets or sets the associated labels if applicable.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.AssociatedEntityDefinition">
            <summary>
            Gets or sets the associated entity definition if applicable.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.CompletionIsCopied">
            <summary>
            Gets or sets a value indicating whether the completion is copied.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.ContentIsCopied">
            <summary>
            Gets or sets a value indicating whether the content is copied.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.DataSource">
            <summary>
            Gets or sets the name of the referenced option list.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.InheritsSecurity">
            <summary>
            Gets or sets a value indicating whether the security is inherited or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.IsPathRelation">
            <summary>
            Gets or sets a value indicating whether the relation is a path relation.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.IsTaxonomyRelation">
            <summary>
            Gets or sets a value indicating whether the relation is a taxonomy relation.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.DefinitionType">
            <summary>
            Gets or sets the type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.DataType">
            <summary>
            Gets or sets the data type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.IsMultiValue">
            <summary>
            Gets or sets a value indicating whether is multi-value or not.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberDefinition.MatchDataType(System.String)">
            <summary>
            Compares the <paramref name="type"/> against the member data type.
            </summary>
            <param name="type">The type to compare against.</param>
            <returns>Whether the types match or not.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup">
            <summary>
            Defines the member group for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.MemberDefinitions">
            <summary>
            Gets or sets the member definitions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.Conditions">
            <summary>
            Gets or sets the conditions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.IsSystemOwned">
            <summary>
            Gets or sets a value indicating whether the member group is system-owned or not.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.Properties">
            <summary>
            Gets the properties.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.MemberGroup.Relations">
            <summary>
            Gets the relations.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Policy">
            <summary>
            Defines the policy model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Policy.Identifier">
            <summary>
            Gets or sets the policy identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Policy.Rules">
            <summary>
            Gets or sets the policy rules.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Policy.MemberSecurity">
            <summary>
            Gets or sets the member security policies.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Policy.MemberGroupSecurity">
            <summary>
            Gets or sets the member group security policies.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyCondition">
            <summary>
            Defines the policy condition model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyCondition.Entities">
            <summary>
            Gets or sets the entities.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyCondition.DirectEntities">
            <summary>
            Gets or sets the entities.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyMemberPolicy">
            <summary>
            Defines the member policy model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyMemberPolicy.Definition">
            <summary>
            Gets or sets the definition name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyMemberPolicy.Target">
            <summary>
            Gets or sets the target name.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule">
            <summary>
            Defines the policy rule model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule.Identifier">
            <summary>
            Gets or sets the policy rule identifier.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule.Definitions">
            <summary>
            Gets or sets the definitions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule.Permissions">
            <summary>
            Gets or sets the permissions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule.Conditions">
            <summary>
            Gets or sets the conditions.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.PolicyRule.IsSystemOwned">
            <summary>
            Gets or sets a value indicating whether the rule is system-owned or not.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property">
            <summary>
            Defines the property model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property.PropertyDataType">
            <summary>
            Gets or sets the property data type.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether the property allow updates.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property.MultiLanguage">
            <summary>
            Gets or sets a value indicating whether the property is multi-language.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Property.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation">
            <summary>
            Defines the relation model for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.AllowUpdates">
            <summary>
            Gets or sets a value indicating whether the property allow updates.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Parent">
            <summary>
            Gets or sets the parent.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Parents">
            <summary>
            Gets or sets the parents.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Child">
            <summary>
            Gets or sets the child.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Children">
            <summary>
            Gets or sets the children.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Identifiers">
            <summary>
            Gets the related entity identifiers.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Relation.Role">
            <summary>
            Gets the role.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource">
            <summary>
            Defines the base metadata resource for serialization purposes.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource.FileName">
            <summary>
            Gets or sets the file name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource.Path">
            <summary>
            Gets or sets the file path.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode">
            <summary>
            Validation mode.
            </summary>
        </member>
        <member name="F:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode.Basic">
            <summary>
            Basic validation.
            </summary>
        </member>
        <member name="F:Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode.Full">
            <summary>
            Full validation.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.AllResourcesValidated">
            <summary>
              Looks up a localized string similar to All resources were validated..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionBuildRegistry">
            <summary>
              Looks up a localized string similar to Rebuilds the local resource registry to ensure integrity and account for all local changes that may have not been reflected..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeCreatePackage">
            <summary>
              Looks up a localized string similar to Creates a package from a serialization folder..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeDiff">
            <summary>
              Looks up a localized string similar to Shows differences between the local serialized and the connected Content Hub instance versions..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityDefinitionDiff">
            <summary>
              Looks up a localized string similar to Shows differences between the local serialized version of entity definition(s) and theirs version in the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityDefinitionPull">
            <summary>
              Looks up a localized string similar to Serializes entity definitions from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityDefinitionPush">
            <summary>
              Looks up a localized string similar to Deserializes entity definitions from the working directory back to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityDefinitionValidate">
            <summary>
              Looks up a localized string similar to Validates the known entity definitions..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityDiff">
            <summary>
              Looks up a localized string similar to Shows differences between the local serialized version of entities(y) and theirs version in the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityPull">
            <summary>
              Looks up a localized string similar to Serializes entities from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityPush">
            <summary>
              Looks up a localized string similar to Deserializes entities from the working directory back to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeEntityValidate">
            <summary>
              Looks up a localized string similar to Validates the known entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeInitialize">
            <summary>
              Looks up a localized string similar to Initializes the directory for serialization..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeInstallPackage">
            <summary>
              Looks up a localized string similar to Install a serialization package..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeOptionListDiff">
            <summary>
              Looks up a localized string similar to Shows differences between the local serialized version of option list(s) and theirs version in the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeOptionListPull">
            <summary>
              Looks up a localized string similar to Serializes option lists from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeOptionListPush">
            <summary>
              Looks up a localized string similar to Deserializes option lists from the working directory back to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeOptionListValidate">
            <summary>
              Looks up a localized string similar to Validates the known option lists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePackage">
            <summary>
              Looks up a localized string similar to Allows to create and distribute packages from a serialization folder..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePolicyDiff">
            <summary>
              Looks up a localized string similar to Shows differences between the local serialized policies and theirs version in the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePolicyPull">
            <summary>
              Looks up a localized string similar to Serializes policies from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePolicyPush">
            <summary>
              Looks up a localized string similar to Deserializes policies from the working directory back to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePolicyValidate">
            <summary>
              Looks up a localized string similar to Validates the known policies..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePull">
            <summary>
              Looks up a localized string similar to Serializes resources from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializePush">
            <summary>
              Looks up a localized string similar to Deserializes resources from the local working directory to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandDescriptionSerializeValidate">
            <summary>
              Looks up a localized string similar to Validates the known resources..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandGroupSerialization">
            <summary>
              Looks up a localized string similar to Allows serialization and deserialization of entities and their definitions to and from a Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionEntityDefinitionDeserializeEntity">
            <summary>
              Looks up a localized string similar to Name of entity definition to push entities for..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionEntityDefinitionSerializeEntity">
            <summary>
              Looks up a localized string similar to Name of entity definition to pull entities for..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionEntityIdSerializeEntity">
            <summary>
              Looks up a localized string similar to Id or identifier of the entity to pull..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionIncludeRelations">
            <summary>
              Looks up a localized string similar to Include related entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionMinutes">
            <summary>
              Looks up a localized string similar to Minutes to go back to look for modified entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameCreatePackage">
            <summary>
              Looks up a localized string similar to Name of the package..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameDeserializeEntity">
            <summary>
              Looks up a localized string similar to Name(s) of entities to push. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameDeserializeEntityDefinition">
            <summary>
              Looks up a localized string similar to Name(s) of entity definitions to push. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameDeserializeOptionList">
            <summary>
              Looks up a localized string similar to Name(s) of option lists to push. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameDeserializePolicy">
            <summary>
              Looks up a localized string similar to Name(s) of the policies to push. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameSerializeEntity">
            <summary>
              Looks up a localized string similar to Name(s) of entities to pull. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameSerializeEntityDefinition">
            <summary>
              Looks up a localized string similar to Name(s) of entity definitions to pull. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameSerializeOptionList">
            <summary>
              Looks up a localized string similar to Name(s) of option lists to pull. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionNameSerializePolicyDiff">
            <summary>
              Looks up a localized string similar to Name(s) of policies to compare. Wildcards allowed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionPathInstallPackage">
            <summary>
              Looks up a localized string similar to Path to the package to install..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionPolicyId">
            <summary>
              Looks up a localized string similar to Id of the policy..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionPolicyName">
            <summary>
              Looks up a localized string similar to Name of the policy..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionRemove">
            <summary>
              Looks up a localized string similar to Remove local-only entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionUpdates">
            <summary>
              Looks up a localized string similar to Update only entities modified in the last minutes (see --minutes)..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CommandOptionWhatIf">
            <summary>
              Looks up a localized string similar to Indicates whether to do a what-if install, where the log of changes is shown, but no changes are made..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ComparingResources">
            <summary>
              Looks up a localized string similar to Comparing resources.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CompressingFolder">
            <summary>
              Looks up a localized string similar to Compressing working directory..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ConditionMissingMemberName">
            <summary>
              Looks up a localized string similar to Member name for condition is missing..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ConditionOnMemberGroupAndDefinition">
            <summary>
              Looks up a localized string similar to Conditions can only be defined on member or member group level, not both..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.CreatingPackage">
            <summary>
              Looks up a localized string similar to Creating package..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.DefinitionNameMissing">
            <summary>
              Looks up a localized string similar to Definition name cannot be null..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.EmptyFolder">
            <summary>
              Looks up a localized string similar to Working directory is empty..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingAllEntities">
            <summary>
              Looks up a localized string similar to Attempting to find all previously serialized entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingAllPolicies">
            <summary>
              Looks up a localized string similar to Attempting to find all previously serialized policies..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingEntityById">
            <summary>
              Looks up a localized string similar to Attempting to find entity with id..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingEntityByNameOrDefinition">
            <summary>
              Looks up a localized string similar to Attempting to find entities by name and/or entity definition..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingPoliciesByName">
            <summary>
              Looks up a localized string similar to Attempting to find policies by name..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FindingPolicyById">
            <summary>
              Looks up a localized string similar to Attempting to find policy by ID..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FlatOptionListsCannotHaveNestedValues">
            <summary>
              Looks up a localized string similar to A flat option list can&apos;t have nested values..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatAddingRegistryEntry">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; is new and will be added to the registry..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatDefinitionNameNotUnique">
            <summary>
              Looks up a localized string similar to Definition name &apos;{0}&apos; already in use..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatDefinitionNotFound">
            <summary>
              Looks up a localized string similar to Definition &apos;{0}&apos; was not found locally or remotely..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatDeserializationError">
            <summary>
              Looks up a localized string similar to An error occured while deserializing entity {0}..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatDeserializingResource">
            <summary>
              Looks up a localized string similar to Deserializing &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatEntityRelationNotIncluded">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; in entity &apos;{1}&apos; does not included &apos;{2}&apos; entity..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatFlagsDoNotMatch">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; flag for &apos;{1}&apos; do not match the same flag in associated entity definition &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatIdentifierNotUnique">
            <summary>
              Looks up a localized string similar to Identifier &apos;{0}&apos; already in used..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatInvalidDefinitionName">
            <summary>
              Looks up a localized string similar to Invalid definition name &apos;{0}&apos;, definition name should be &apos;{1}&apos; based on the resource location..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatInvalidPropertyAllowUpdates">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; has an invalid value for the `AllowUpdates` property, it should be &apos;{1}&apos; according to the definition &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatInvalidPropertyDataType">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; with data type &apos;{1}&apos; is missing from definition &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatInvalidRelationAllowUpdates">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; has an invalid value for the `AllowUpdates` property, it should be &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatInvalidRelationRole">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; has invalid &apos;{1}&apos; role, it should be &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatMissingProperty">
            <summary>
              Looks up a localized string similar to Property &apos;{0}&apos; is missing from definition &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatMissingRelation">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; is missing from entity definition &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatOptionListDuplicateValues">
            <summary>
              Looks up a localized string similar to Values &apos;{0}&apos; are duplicated..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatOptionListNameNotUnique">
            <summary>
              Looks up a localized string similar to Option list name &apos;{0}&apos; already in use..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatOptionListNotFound">
            <summary>
              Looks up a localized string similar to Option list &apos;{0}&apos; was not found locally or remotely..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatOptionListValueNotFound">
            <summary>
              Looks up a localized string similar to Value &apos;{0}&apos; was not found in option list &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatPackageInstallationError">
            <summary>
              Looks up a localized string similar to An error occured while installing the {0}. Aborting!.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatPartiallyDeserializingResource">
            <summary>
              Looks up a localized string similar to Partially deserializing &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatPolicyMemberPolicyMissingDefinitionOrTarget">
            <summary>
              Looks up a localized string similar to A member policy of type &apos;{0}&apos; is missing either the &apos;Definition&apos; or &apos;Target&apos; property..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRebuildingRegistry">
            <summary>
              Looks up a localized string similar to Rebuilding {0} registry..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelatedEntityFoundLocally">
            <summary>
              Looks up a localized string similar to Related entity &apos;{0}&apos; was found locally..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelatedEntityFoundRemotely">
            <summary>
              Looks up a localized string similar to Related entity &apos;{0}&apos; was found remotely..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelatedEntityNotFound">
            <summary>
              Looks up a localized string similar to Related entity &apos;{0}&apos; was not found locally or remotely..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelationCardinalityDoNotMatchAssociatedDefinition">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; cardinality do not match cardinality in associated entity definition &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelationLabelsDoNotMatchInAssociatedDefinition">
            <summary>
              Looks up a localized string similar to Labels for &apos;{0}&apos; do not match labels in associated entity definition &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRelationMissingInAssociatedDefinition">
            <summary>
              Looks up a localized string similar to Relation &apos;{0}&apos; is missing from associated entity definition &apos;{1}&apos; or has invalid role..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRemovingRegistryEntry">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; does no longer exist in the file system. Removing from registry..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatRetryingDeserializingResource">
            <summary>
              Looks up a localized string similar to Retrying deserializing &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchEntityDefinitions">
            <summary>
              Looks up a localized string similar to Attempting to fetch all entity definitions..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchEntityDefinitionsExact">
            <summary>
              Looks up a localized string similar to Attempting to find entity definition with name &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchEntityDefinitionsWildcard">
            <summary>
              Looks up a localized string similar to Attempting to find entity definitions via wildcard search: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchOptionListExact">
            <summary>
              Looks up a localized string similar to Attempting to find option list with name &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchOptionLists">
            <summary>
              Looks up a localized string similar to Attempting to fetch all option lists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSerializationFetchOptionListsWildcard">
            <summary>
              Looks up a localized string similar to Attempting to find option lists via wildcard search: &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSkipSystemOwnedResource">
            <summary>
              Looks up a localized string similar to Skipping system-owned resource &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedMemberDefinitionConflict">
            <summary>
              Looks up a localized string similar to A system-owned member definition with the name &apos;{0}&apos; already exists on the entity definition..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedMemberDefinitionInvalid">
            <summary>
              Looks up a localized string similar to Unable to process system-owned member definition &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedMemberGroupConflict">
            <summary>
              Looks up a localized string similar to A system-owned member group with the name &apos;{0}&apos; already exists on the entity definition..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedMemberGroupInvalid">
            <summary>
              Looks up a localized string similar to Unable to process system-owned member group &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedPolicyRuleConflict">
            <summary>
              Looks up a localized string similar to A system-owned policy rule with the identifier &apos;{0}&apos; already exists on the policy..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatSystemOwnedPolicyRuleInvalid">
            <summary>
              Looks up a localized string similar to Unable to process system-owned policy rule &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatUnknownEntityByIdentifier">
            <summary>
              Looks up a localized string similar to Entity with identifier &apos;{0}&apos; was not found..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatUnknownOptionList">
            <summary>
              Looks up a localized string similar to Option list &apos;{0}&apos; referenced by property &apos;{1}&apos; does not exist..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatUpdatingRegistryEntry">
            <summary>
              Looks up a localized string similar to &apos;{0}&apos; was updated in the registry..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatValidatingProperty">
            <summary>
              Looks up a localized string similar to Validating property &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatValidatingRelatedEntity">
            <summary>
              Looks up a localized string similar to Validating related entity &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatValidatingRelation">
            <summary>
              Looks up a localized string similar to Validating relation &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatValidatingRelationWithRole">
            <summary>
              Looks up a localized string similar to Validating relation &apos;{0}&apos; with role &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatValidatingResource">
            <summary>
              Looks up a localized string similar to Validating &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatWarnIgnoredProperty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; is missing in the source and will be ignored.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatWarnIgnoredRelation">
            <summary>
              Looks up a localized string similar to The relation &apos;{0}&apos; is missing in the source and will be ignored.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatWarnMissingProperty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; is missing in the destination.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.FormatWarnMissingRelation">
            <summary>
              Looks up a localized string similar to The relation &apos;{0}&apos; is missing in the destination.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.IdentifierMissing">
            <summary>
              Looks up a localized string similar to Identifier cannot be null..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.Initializing">
            <summary>
              Looks up a localized string similar to Initializing.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.InstallingPackage">
            <summary>
              Looks up a localized string similar to Installing package..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.InvalidResources">
            <summary>
              Looks up a localized string similar to Some of your resources are not valid..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.LoadingSerializedResources">
            <summary>
              Looks up a localized string similar to Loading serialized resources from working directory..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.MissingEntityDefinition">
            <summary>
              Looks up a localized string similar to An entity definition must be specified..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.MissingRootEntity">
            <summary>
              Looks up a localized string similar to Root entity has not been set..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.MovingPackage">
            <summary>
              Looks up a localized string similar to Moving package to working directory..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.OptionListMissingValueIdentifiers">
            <summary>
              Looks up a localized string similar to Some values are missing the identifier..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.OptionListNameMissing">
            <summary>
              Looks up a localized string similar to Option list name cannot be null..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageDoesNotExists">
            <summary>
              Looks up a localized string similar to Package does not exists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageInstalled">
            <summary>
              Looks up a localized string similar to Package was installed..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageInstallingEntities">
            <summary>
              Looks up a localized string similar to Installing entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageInstallingEntityDefinitions">
            <summary>
              Looks up a localized string similar to Installing entity definitions..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageInstallingOptionLists">
            <summary>
              Looks up a localized string similar to Installing option lists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageInstallingPolicies">
            <summary>
              Looks up a localized string similar to Installing policies..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PackageReady">
            <summary>
              Looks up a localized string similar to Serialization package is ready to use..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PullingResources">
            <summary>
              Looks up a localized string similar to Pulling resources to the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.PushingResources">
            <summary>
              Looks up a localized string similar to Pushing resources from the connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RebuildingRegistries">
            <summary>
              Looks up a localized string similar to Rebuilding registries..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RegistryUpToDate">
            <summary>
              Looks up a localized string similar to Registry is up-to-date..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RelationAssociatedDefinitionEmpty">
            <summary>
              Looks up a localized string similar to The associated definition is missing or empty..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RemovingResources">
            <summary>
              Looks up a localized string similar to Removing resources from working directory..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ResourcesNotFound">
            <summary>
              Looks up a localized string similar to The specified resources were not found..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ResourcesNotPersisted">
            <summary>
              Looks up a localized string similar to No resources were persisted to connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RetryingDefinitions">
            <summary>
              Looks up a localized string similar to Retrying definitions..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.RetryingEntities">
            <summary>
              Looks up a localized string similar to Retrying entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.SuccessfulPull">
            <summary>
              Looks up a localized string similar to Persisted serialized resources to the working directory..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.SuccessfulPush">
            <summary>
              Looks up a localized string similar to Persisted serialized resources to connected Content Hub instance..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.SystemOwnedResourceInvalid">
            <summary>
              Looks up a localized string similar to Unable to process system-owned resource..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingDefinitionExists">
            <summary>
              Looks up a localized string similar to Validating definition exists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingDefinitionNameMissing">
            <summary>
              Looks up a localized string similar to Validating definition name is not missing..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingDefinitionNameUnique">
            <summary>
              Looks up a localized string similar to Validating definition name is unique..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingDefinitionNameValid">
            <summary>
              Looks up a localized string similar to Validating definition name is valid..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingIdentifierMissing">
            <summary>
              Looks up a localized string similar to Validating identifier is not missing..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingIdentifierUnique">
            <summary>
              Looks up a localized string similar to Validating identifier is unique..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingOptionListNameMissing">
            <summary>
              Looks up a localized string similar to Validating option list name is not missing..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingOptionListNameUnique">
            <summary>
              Looks up a localized string similar to Validating option list name is unique..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingOptionLists">
            <summary>
              Looks up a localized string similar to Validating option lists..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingPolicyMemberPolicies">
            <summary>
              Looks up a localized string similar to Validating member policies..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingProperties">
            <summary>
              Looks up a localized string similar to Validating properties..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingRelatedEntities">
            <summary>
              Looks up a localized string similar to Validating related entities..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingRelations">
            <summary>
              Looks up a localized string similar to Validating relations..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingResources">
            <summary>
              Looks up a localized string similar to Validating resources..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingSystemOwned">
            <summary>
              Looks up a localized string similar to Validating is not mark as system owned..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.ValidatingValues">
            <summary>
              Looks up a localized string similar to Validating values..
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.SerializationMessages.WarningsHeadline">
            <summary>
              Looks up a localized string similar to Warnings:.
            </summary>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.SerializationPlugin">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.SerializationPlugin.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.SerializationPlugin.RegisterCommands(Sitecore.CH.Cli.Core.Abstractions.Infrastructure.ICommandRegistry)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.BaseYamlDiffService`1.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.BaseYamlDiffService`1.Identifier">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.BaseYamlDiffService`1.AddedActionName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.BaseYamlDiffService`1.RemovedActionName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityDefinitionYamlDiffService.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityDefinitionYamlDiffService.Identifier">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityYamlDiffService.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityYamlDiffService.Identifier">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityYamlDiffService.AddedActionName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityYamlDiffService.RemovedActionName">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.EntityYamlSerializer.DeserializeAsync(System.String[])">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService">
            <summary>
            Describes the package service.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService.CreatePackageAsync(System.String,System.String)">
            <summary>
            Creates a package from a serialization folder.
            </summary>
            <param name="name">The name of the package.</param>
            <param name="workingDirectory">The working directory.</param>
            <returns>A value indicating whether the package was created or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IPackageService.InstallPackageAsync(System.IO.FileInfo,System.Boolean)">
            <summary>
            Install a serialization package in the connected Content Hub instance.
            </summary>
            <param name="path">The path of the package.</param>
            <param name="whatIf">Indicates whether to do a what-if installation.</param>
            <returns>A value indicating whether the package was install or not.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService">
            <summary>
            Defines the resource registry service.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.CreateResourceRegistryAsync(System.String,System.String,System.Boolean)">
            <summary>
            Creates the resource registry.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="resourceFolderName">The resource-specific folder name.</param>
            <param name="save">Determines whether or not the resource registry is persisted.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.GetResourcesRegistryAsync(System.String,System.String)">
            <summary>
            Gets the resource registry.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="resourceFolderName">The resource-specific folder name.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.SaveResourcesRegistryAsync(Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry,System.Boolean,System.Nullable{System.DateTime})">
            <summary>
            Saves the resource registry.
            </summary>
            <param name="registry">The resource registry.</param>
            <param name="forceCreate">Determines whether or not the creation of the registry will be forced.</param>
            <param name="updatedDate">The updated date.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.AddOrUpdate(Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry,Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource)">
            <summary>
            Adds a <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> to the registry.
            </summary>
            <param name="registry">The resource registry.</param>
            <param name="resource">The <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> to be added.</param>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.TryRemove(Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry,System.String)">
            <summary>
            Removes a <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> from the registry.
            </summary>
            <param name="registry">The resource registry.</param>
            <param name="identifierOrNameOrPath">The identifier, the name or the path of the resource.</param>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.GetByPath(Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry,System.String)">
            <summary>
            Gets a resource by path.
            </summary>
            <param name="registry">The resource registry.</param>
            <param name="path">The path.</param>
            <returns>A <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> if found, null otherwise.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.GetByIdentifier(Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResourcesRegistry,System.String)">
            <summary>
            Gets a resource by identifier.
            </summary>
            <param name="registry">The resource registry.</param>
            <param name="identifier">The identifier.</param>
            <returns>A <see cref="T:Sitecore.CH.Cli.Plugin.Serialization.Models.SerializationResource"/> if found, null otherwise.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IResourceRegistryService.RebuildRegistryForType(System.String,System.String,System.String,System.IO.SearchOption)">
            <summary>
            Rebuilds the registry for a resource type.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="resourceFolderName">The name of the folder.</param>
            <param name="resourceExtension">The extension of the resource.</param>
            <param name="searchOption">The files search option.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService">
            <summary>
            Describes the validation service.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidateEntityResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates entity resources under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="paths">The paths.</param>
            <param name="mode">The validation mode.</param>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidateEntityDefinitionResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates entity definition resources under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="paths">The paths.</param>
            <param name="mode">The validation mode.</param>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidateOptionListResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates entity definition resources under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="paths">The paths.</param>
            <param name="mode">The validation mode.</param>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidateResourcesAsync(System.String,Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates all resources under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="mode">The validation mode.</param>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidateResourcesAsync``1(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates all resources of a certain type under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="paths">The paths.</param>
            <param name="mode">The validation mode.</param>
            <typeparam name="T">The resource type.</typeparam>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IValidationService.ValidatePolicyResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Validates policy resources under <paramref name="workingDirectory"/>.
            </summary>
            <param name="workingDirectory">The working directory.</param>
            <param name="paths">The paths.</param>
            <param name="mode">The validation mode.</param>
            <returns>A value indicating whether the resources are valid or not.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1">
            <summary>
            Describes the Yaml diff service.
            </summary>
            <typeparam name="TResource">The resource type.</typeparam>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1.TypeName">
            <summary>
            Gets the type name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1.Identifier">
            <summary>
            Gets the source name.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1.AddedActionName">
            <summary>
            Gets the action name to describe added or missing properties.
            </summary>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1.RemovedActionName">
            <summary>
            Gets the action name to describe removed or ignored properties.
            </summary>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlDiffService`1.Diff(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Compares the source and destination Yaml contents.
            </summary>
            <param name="sourceValue">The source Yaml string.</param>
            <param name="destinationValue">The destination Yaml string.</param>
            <param name="detailed">Determines whether a detailed changelog will be returned.</param>
            <returns>A formatted list of differences.</returns>
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1">
            <summary>
            Defines the Yaml serializer.
            </summary>
            <typeparam name="TResource">The resource type.</typeparam>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1.SerializeAsync(`0)">
            <summary>
            Serializes the provided entity definition.
            </summary>
            <param name="resource">The resource.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1.SerializeAsync``1(System.String)">
            <summary>
            Serializes the provided entity definition.
            </summary>
            <param name="identifier">The identifier.</param>
            <typeparam name="T">The type of the resource.</typeparam>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1.DeserializeAsync(System.String)">
            <summary>
            Deserializes the given Yaml to a <see cref="T:Stylelabs.M.Sdk.Contracts.Base.IResource"/> instance.
            </summary>
            <param name="yaml">The raw Yaml.</param>
            <returns>The identifier of the resource.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.IYamlSerializer`1.DeserializeAsync(System.String[])">
            <summary>
            Deserializes multiple resources.
            </summary>
            <param name="paths">The resources paths.</param>
            <returns>The list of results.</returns>
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.OptionListYamlDiffService.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.OptionListYamlDiffService.Identifier">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.PackageService.CreatePackageAsync(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.PackageService.InstallPackageAsync(System.IO.FileInfo,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.PolicyYamlDiffService.TypeName">
            <inheritdoc />
        </member>
        <member name="P:Sitecore.CH.Cli.Plugin.Serialization.Services.PolicyYamlDiffService.Identifier">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.ValidationService.ValidateEntityResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.ValidationService.ValidateEntityDefinitionResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.ValidationService.ValidateOptionListResourcesAsync(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.ValidationService.ValidateResourcesAsync(System.String,Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.ValidationService.ValidateResourcesAsync``1(System.String,System.String[],Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.YamlSerializer`1.SerializeAsync(`0)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.YamlSerializer`1.SerializeAsync``1(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.YamlSerializer`1.DeserializeAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Services.YamlSerializer`1.DeserializeAsync(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.BaseYamlValidator`1.IsValid(`0,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.BaseYamlValidator`1.ShouldRun(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityAssociatedDefinitionValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityPropertiesValidator.ShouldRun(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityPropertiesValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityRelatedEntitiesValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityRelatedEntitiesValidator.ShouldRun(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.Entities.EntityRelationsValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Entity,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="T:Sitecore.CH.Cli.Plugin.Serialization.Validators.IYamlValidator`1">
            <summary>
            Describes the Yaml validator.
            </summary>
            <typeparam name="T">The serialized resource object.</typeparam>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.IYamlValidator`1.IsValid(`0,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Determines whether the provided <paramref name="resource"/> is valid or not.
            </summary>
            <param name="resource">The current resource to verify.</param>
            <param name="allResources">Remaining resources that match the same type, filter or are otherwise related.</param>
            <param name="mode">The validation mode.</param>
            <returns><c>true</c> if the resource is valid, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.IYamlValidator`1.ShouldRun(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <summary>
            Determines if the validator should run.
            </summary>
            <param name="mode">The validation mode.</param>
            <returns><c>true</c> if the validator should run, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.OptionLists.OptionListNameNotEmptyValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.OptionLists.OptionListNameUniqueValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.OptionLists.OptionListSystemOwnedValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
        <member name="M:Sitecore.CH.Cli.Plugin.Serialization.Validators.OptionLists.OptionListValuesValidator.IsValid(Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.DataSource,System.Collections.Generic.IEnumerable{Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.Resource},Sitecore.CH.Cli.Plugin.Serialization.Models.Validation.ValidationMode)">
            <inheritdoc />
        </member>
    </members>
</doc>
